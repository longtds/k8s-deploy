domain=k8s.local
# node network
node_ip=(192.168.121.88 192.168.121.18 192.168.121.117)
node_hostname=(node1.${domain} node2.${domain} node3.${domain})

# new node network
addnode_ip=(192.168.121.234 192.168.121.198)
addnode_hostname=(node4.${domain} node5.${domain})

# only support root
user=root
# ssh port
ssh_port=22
# iptables or ipvs
kubeproxy_mode=iptables
# flannel or cilium
container_network=flannel
# vxlan or host-gw
flannel_backend=vxlan
# tunnel or native
cilium_mode=tunnel
cilium_kubeProxyReplacement=true
# localpath or longhorn(must install iscsiadm/open-iscsi)
container_storage=localpath
# arch
arch=$(arch)

# path
run_path=${PWD}
pkg_path=${run_path}/pkg
base_path=/opt/kubernetes
bin_path=${base_path}/bin
cfg_path=${base_path}/etc
pvc_path=/data

# version
cfssl_version=1.6.5
etcd_version=3.5.21
nerdctl_version=2.0.4
containerd_version=1.7.27
kubernetes_version=1.32.4
coredns_version=1.14.0
metrics_version=0.7.2
flannel_version=0.26.7
localpath_version=0.0.31
registry_version=2.8.3
haproxy_version=3.1.2
longhorn_version=1.8.1
cilium_cli_version=0.18.3
cilium_version=1.17.3
helm_version=3.17.3

# pkg file
cfssl_pkg=cfssl-${cfssl_version}-${arch}.tgz
etcd_pkg=etcd-${etcd_version}-${arch}.tgz
nerdctl_pkg=nerdctl-${nerdctl_version}-${arch}.tgz
containerd_pkg=cri-containerd-cni-${containerd_version}-${arch}.tgz
kubernetes_pkg=kubernetes-${kubernetes_version}-${arch}.tgz
coredns_pkg=coredns-${coredns_version}.tgz
metrics_pkg=metrics-server-${metrics_version}.yaml
localpath_pkg=local-path-storage-${localpath_version}.yaml
flannel_pkg=kube-flannel-${flannel_version}.yaml
registry_pkg=registry-${registry_version}-${arch}.tar
haproxy_pkg=haproxy-${haproxy_version}-${arch}.tar
image_pkg=image-${arch}.tgz
cert_file=certs.tgz
longhorn_pkg=longhorn-${longhorn_version}.yaml
cilium_cli_pkg=cilium-cli-${cilium_cli_version}-${arch}.tgz
cilium_pkg=cilium-${cilium_version}.tgz
helm_pkg=helm-${helm_version}-${arch}.tgz

# pkg online url
pkg_url=https://