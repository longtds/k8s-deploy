# cluster domain
domain=k8s.local

# Deploy node hostname and IP address
node_ip=(192.168.121.88 192.168.121.18 192.168.121.117)
node_hostname=(node1.${domain} node2.${domain} node3.${domain})
# Add node hostname and IP address
addnode_ip=(192.168.121.234 192.168.121.198)
addnode_hostname=(node4.${domain} node5.${domain})

# Deploy connection users, currently only supporting root
user=root
# ssh port used for deployment
ssh_port=22
# SSH connection key path
ssh_key=.ssh/id_rsa

# kube-proxy network: iptables or ipvs
kubeproxy_mode=iptables
# flannel network backend: vxlan or host-gw
flannel_backend=vxlan

# kube config
kube_token=a5587b0a00bbbd5ead752f7074b4f644
svc_ip_range=10.96.0.0/16
pod_ip_range=10.244.0.0/16
kubeapi_svc_ip=10.96.0.1
dns_svc_ip=10.96.0.10

# arch
arch=$(arch)
if [ ${arch} == "x86_64" ]; then
    arch_name=amd64
elif [ ${arch} == "aarch64" ]; then
    arch_name=arm64
else
    echo "arch error, only support x86_64 and aarch64"
    exit 1
fi

# Deploy Path
run_path=${PWD}
pkg_path=${run_path}/pkg
pkg_bin_path=${pkg_path}/bin
pkg_yaml_path=${pkg_path}/yaml
pkg_chart_path=${pkg_path}/chart
pkg_tgz_path=${pkg_path}/tgz
pkg_image_path=${pkg_path}/image
pki_path=${run_path}/pki
hosts_path=${run_path}/hosts
base_path=/opt/kubernetes
bin_path=${base_path}/bin
cfg_path=${base_path}/etc
etcd_data_path=${base_path}/etcd
registry_path=${base_path}/registry
local_path=/data

# Component Version
cfssl_version=1.6.5
etcd_version=3.5.21
nerdctl_version=2.0.4
containerd_version=1.7.27
kubernetes_version=1.32.4
coredns_version=1.11.3
metrics_version=0.7.2
flannel_version=0.26.7
localpath_version=0.0.31
registry_version=2.8.3
haproxy_version=3.1.2
helm_version=3.17.3
pause_version=3.8

# Deploy filename and url
cfssl_file=cfssl_${cfssl_version}_linux_${arch_name}
cfssl_url=https://github.com/cloudflare/cfssl/releases/download/v${cfssl_version}/${cfssl_file}
cfssljson_file=cfssljson_${cfssl_version}_linux_${arch_name}
cfssljson_url=https://github.com/cloudflare/cfssl/releases/download/v${cfssl_version}/${cfssljson_file}
etcd_file=etcd-v${etcd_version}-linux-${arch_name}.tar.gz
etcd_url=https://github.com/etcd-io/etcd/releases/download/v${etcd_version}/${etcd_file}
nerdctl_file=nerdctl-${nerdctl_version}-linux-${arch_name}.tar.gz
nerdctl_url=https://github.com/containerd/nerdctl/releases/download/v${nerdctl_version}/${nerdctl_file}
containerd_file=cri-containerd-cni-${containerd_version}-linux-${arch_name}.tar.gz
containerd_url=https://github.com/containerd/containerd/releases/download/v${containerd_version}/${containerd_file}
kubernetes_file=kubernetes-server-linux-${arch_name}.tar.gz
kubernetes_url=https://dl.k8s.io/v${kubernetes_version}/${kubernetes_file}
flannel_file=kube-flannel.yaml
flannel_url=https://github.com/flannel-io/flannel/releases/download/v${flannel_version}/kube-flannel.yml
localpath_file=local-path-storage.yaml
localpath_url=https://raw.githubusercontent.com/rancher/local-path-provisioner/v${localpath_version}/deploy/${localpath_file}
metrics_file=metrics-server-${metrics_version}.yaml
metrics_url=https://github.com/kubernetes-sigs/metrics-server/releases/download/v${metrics_version}/components.yaml
coredns_file=coredns.yaml
coredns_url=https://raw.githubusercontent.com/kubernetes/kubernetes/refs/tags/v${kubernetes_version}/cluster/addons/dns/coredns/coredns.yaml.base
registry_file=registry.tar
haproxy_file=haproxy.tar
image_file=image-registry.tar.gz